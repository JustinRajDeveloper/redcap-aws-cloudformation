container_commands:
  leaderonly:
    command: "touch /leaderonly"
    leader_only: True
files:
  "/create-redcap-user.sql":
    mode: "000755"
    owner: root
    group: root
    content: |
      CREATE USER IF NOT EXISTS 'redcap_user'@'%' IDENTIFIED BY '${DBPassword}';
      GRANT SELECT, INSERT, UPDATE, DELETE ON `redcap`.* TO 'redcap_user'@'%';
      -- Create second MySQL user as redcap_user2 with a random password, which could possibly a randomly generated value.
      FLUSH PRIVILEGES;
      CREATE USER IF NOT EXISTS 'redcap_user2'@'%' IDENTIFIED BY '${DBPassword}';
      GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, ALTER, REFERENCES ON `redcap`.* TO 'redcap_user2'@'%';
      FLUSH PRIVILEGES;
  "/create-initial-user.sql":
    mode: "000755"
    owner: root
    group: root
    content: |
      UPDATE redcap_config SET value = 'table' WHERE field_name = 'auth_meth_global';
      INSERT INTO redcap_user_information (username, user_email, user_firstname, user_lastname, super_user) VALUES ('redcap_admin', 'joe.user@projectredcap.org', 'REDCap', 'Administrator', '1');
      INSERT INTO redcap_auth (username, password, legacy_hash, temp_pwd) VALUES ('redcap_admin', MD5('${DBPassword}'), '1', '1'); 
      UPDATE redcap_user_information SET super_user = '0' WHERE username = 'site_admin';
      UPDATE redcap_config set value = '2' where field_name = 'edoc_storage_option';
      UPDATE redcap_config SET value = '${S3Bucket}' WHERE field_name = 'amazon_s3_bucket';
      UPDATE redcap_config SET value = '${S3AccessKey}' WHERE field_name = 'amazon_s3_key';
      UPDATE redcap_config SET value = '${S3SecretKey}' WHERE field_name = 'amazon_s3_secret'; 
      UPDATE redcap_config SET value = '${AWS::Region}' WHERE field_name = 'amazon_s3_endpoint';     
      -- Manually set flag to indicate that this installation is being run on AWS CloudFormation
      REPLACE INTO redcap_config (field_name, value) VALUES ('aws_quickstart', '1'); 
      -- Add second MySQL user with user and password in *plain text* (will be auto-encrypted by REDCap afterward)
      REPLACE INTO redcap_config (field_name, value) VALUES
      ('redcap_updates_user', 'redcap_user2'),
      ('redcap_updates_password', '${DBPassword}'),
      ('redcap_updates_password_encrypted', '0');
